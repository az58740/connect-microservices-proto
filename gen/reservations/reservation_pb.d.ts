// @generated by protoc-gen-es v2.2.3 with parameter "target=ts+js+dts,import_extension=js,import_extension=ts"
// @generated from file reservations/reservation.proto (package reservation, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file reservations/reservation.proto.
 */
export declare const file_reservations_reservation: GenFile;

/**
 * فسیلیتی یا مکان — مانند مطب، آرایشگاه، هتل، باشگاه
 * Facility such as a clinic, salon, hotel, or gym
 *
 * @generated from message reservation.Facility
 */
export declare type Facility = Message<"reservation.Facility"> & {
  /**
   * شناسه یکتا | Unique facility ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * نام مکان | Name of the facility
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * توضیحات | Description
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * نوع فسیلیتی مانند "SALON", "HOTEL", "CLINIC" | Type of the facility
   *
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * شناسه کاربر صاحب فسیلیتی | User ID of the facility owner
   *
   * @generated from field: string owner_user_id = 5;
   */
  ownerUserId: string;
};

/**
 * Describes the message reservation.Facility.
 * Use `create(FacilitySchema)` to create a new message.
 */
export declare const FacilitySchema: GenMessage<Facility>;

/**
 * سرویس یا خدمت قابل ارائه در فسیلیتی
 * Service offered in a facility
 *
 * @generated from message reservation.Service
 */
export declare type Service = Message<"reservation.Service"> & {
  /**
   * شناسه یکتا | Unique service ID
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * شناسه فسیلیتی | Associated facility ID
   *
   * @generated from field: string facility_id = 2;
   */
  facilityId: string;

  /**
   * نام سرویس مانند "کوتاهی مو" یا "ویزیت عمومی" | Service name
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * توضیحات | Description
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * مدت زمان سرویس به دقیقه | Duration in minutes
   *
   * @generated from field: int32 duration_minutes = 5;
   */
  durationMinutes: number;

  /**
   * قیمت سرویس | Service price
   *
   * @generated from field: double price = 6;
   */
  price: number;
};

/**
 * Describes the message reservation.Service.
 * Use `create(ServiceSchema)` to create a new message.
 */
export declare const ServiceSchema: GenMessage<Service>;

/**
 * نگاشت بین سرویس و ارائه‌دهنده خاص
 * Mapping of service to a specific provider
 *
 * @generated from message reservation.ProviderService
 */
export declare type ProviderService = Message<"reservation.ProviderService"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string service_id = 2;
   */
  serviceId: string;

  /**
   * شناسه کاربر ارائه‌دهنده (مثل پزشک یا آرایشگر)
   *
   * @generated from field: string provider_user_id = 3;
   */
  providerUserId: string;

  /**
   * آیا ارائه می‌شود یا نه
   *
   * @generated from field: bool is_available = 4;
   */
  isAvailable: boolean;
};

/**
 * Describes the message reservation.ProviderService.
 * Use `create(ProviderServiceSchema)` to create a new message.
 */
export declare const ProviderServiceSchema: GenMessage<ProviderService>;

/**
 * برنامه‌ زمانی تکرارشونده‌ی سرویس‌دهنده در یک روز خاص
 * Weekly repeating schedule for a provider
 *
 * @generated from message reservation.WeeklySchedule
 */
export declare type WeeklySchedule = Message<"reservation.WeeklySchedule"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string provider_user_id = 2;
   */
  providerUserId: string;

  /**
   * روز هفته
   *
   * @generated from field: reservation.WeekDay day = 3;
   */
  day: WeekDay;

  /**
   * ساعت شروع (مانند "09:00")
   *
   * @generated from field: string start_time = 4;
   */
  startTime: string;

  /**
   * ساعت پایان (مانند "17:00")
   *
   * @generated from field: string end_time = 5;
   */
  endTime: string;

  /**
   * مکان مرتبط
   *
   * @generated from field: string facility_id = 6;
   */
  facilityId: string;

  /**
   * سرویس مرتبط (اختیاری)
   *
   * @generated from field: string service_id = 7;
   */
  serviceId: string;
};

/**
 * Describes the message reservation.WeeklySchedule.
 * Use `create(WeeklyScheduleSchema)` to create a new message.
 */
export declare const WeeklyScheduleSchema: GenMessage<WeeklySchedule>;

/**
 * تایم‌اسلات — بازه‌ زمانی دقیق رزرو
 * TimeSlot — precise slot available for reservation
 *
 * @generated from message reservation.TimeSlot
 */
export declare type TimeSlot = Message<"reservation.TimeSlot"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string provider_user_id = 2;
   */
  providerUserId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 4;
   */
  endTime?: Timestamp;

  /**
   * @generated from field: reservation.OwnerType owner_type = 5;
   */
  ownerType: OwnerType;

  /**
   * @generated from field: bool is_reserved = 6;
   */
  isReserved: boolean;

  /**
   * @generated from field: string weekly_schedule_id = 7;
   */
  weeklyScheduleId: string;

  /**
   * @generated from field: string facility_id = 8;
   */
  facilityId: string;

  /**
   * @generated from field: string service_id = 9;
   */
  serviceId: string;
};

/**
 * Describes the message reservation.TimeSlot.
 * Use `create(TimeSlotSchema)` to create a new message.
 */
export declare const TimeSlotSchema: GenMessage<TimeSlot>;

/**
 * رزرو ثبت‌شده توسط کاربر
 * Reservation made by user
 *
 * @generated from message reservation.Reservation
 */
export declare type Reservation = Message<"reservation.Reservation"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * کاربر رزروکننده
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * سرویس‌دهنده
   *
   * @generated from field: string provider_user_id = 3;
   */
  providerUserId: string;

  /**
   * @generated from field: string service_id = 4;
   */
  serviceId: string;

  /**
   * @generated from field: string facility_id = 5;
   */
  facilityId: string;

  /**
   * @generated from field: string time_slot_id = 6;
   */
  timeSlotId: string;

  /**
   * @generated from field: reservation.ReservationStatus status = 7;
   */
  status: ReservationStatus;

  /**
   * @generated from field: string notes = 8;
   */
  notes: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 9;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message reservation.Reservation.
 * Use `create(ReservationSchema)` to create a new message.
 */
export declare const ReservationSchema: GenMessage<Reservation>;

/**
 * @generated from message reservation.CreateFacilityRequest
 */
export declare type CreateFacilityRequest = Message<"reservation.CreateFacilityRequest"> & {
  /**
   * @generated from field: reservation.Facility facility = 1;
   */
  facility?: Facility;
};

/**
 * Describes the message reservation.CreateFacilityRequest.
 * Use `create(CreateFacilityRequestSchema)` to create a new message.
 */
export declare const CreateFacilityRequestSchema: GenMessage<CreateFacilityRequest>;

/**
 * @generated from message reservation.CreateFacilityResponse
 */
export declare type CreateFacilityResponse = Message<"reservation.CreateFacilityResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message reservation.CreateFacilityResponse.
 * Use `create(CreateFacilityResponseSchema)` to create a new message.
 */
export declare const CreateFacilityResponseSchema: GenMessage<CreateFacilityResponse>;

/**
 * @generated from message reservation.CreateServiceRequest
 */
export declare type CreateServiceRequest = Message<"reservation.CreateServiceRequest"> & {
  /**
   * @generated from field: reservation.Service service = 1;
   */
  service?: Service;
};

/**
 * Describes the message reservation.CreateServiceRequest.
 * Use `create(CreateServiceRequestSchema)` to create a new message.
 */
export declare const CreateServiceRequestSchema: GenMessage<CreateServiceRequest>;

/**
 * @generated from message reservation.CreateServiceResponse
 */
export declare type CreateServiceResponse = Message<"reservation.CreateServiceResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message reservation.CreateServiceResponse.
 * Use `create(CreateServiceResponseSchema)` to create a new message.
 */
export declare const CreateServiceResponseSchema: GenMessage<CreateServiceResponse>;

/**
 * @generated from message reservation.AssignServiceToProviderRequest
 */
export declare type AssignServiceToProviderRequest = Message<"reservation.AssignServiceToProviderRequest"> & {
  /**
   * @generated from field: string service_id = 1;
   */
  serviceId: string;

  /**
   * @generated from field: string provider_user_id = 2;
   */
  providerUserId: string;
};

/**
 * Describes the message reservation.AssignServiceToProviderRequest.
 * Use `create(AssignServiceToProviderRequestSchema)` to create a new message.
 */
export declare const AssignServiceToProviderRequestSchema: GenMessage<AssignServiceToProviderRequest>;

/**
 * @generated from message reservation.AssignServiceToProviderResponse
 */
export declare type AssignServiceToProviderResponse = Message<"reservation.AssignServiceToProviderResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message reservation.AssignServiceToProviderResponse.
 * Use `create(AssignServiceToProviderResponseSchema)` to create a new message.
 */
export declare const AssignServiceToProviderResponseSchema: GenMessage<AssignServiceToProviderResponse>;

/**
 * @generated from message reservation.CreateWeeklyScheduleRequest
 */
export declare type CreateWeeklyScheduleRequest = Message<"reservation.CreateWeeklyScheduleRequest"> & {
  /**
   * @generated from field: reservation.WeeklySchedule schedule = 1;
   */
  schedule?: WeeklySchedule;
};

/**
 * Describes the message reservation.CreateWeeklyScheduleRequest.
 * Use `create(CreateWeeklyScheduleRequestSchema)` to create a new message.
 */
export declare const CreateWeeklyScheduleRequestSchema: GenMessage<CreateWeeklyScheduleRequest>;

/**
 * @generated from message reservation.CreateWeeklyScheduleResponse
 */
export declare type CreateWeeklyScheduleResponse = Message<"reservation.CreateWeeklyScheduleResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message reservation.CreateWeeklyScheduleResponse.
 * Use `create(CreateWeeklyScheduleResponseSchema)` to create a new message.
 */
export declare const CreateWeeklyScheduleResponseSchema: GenMessage<CreateWeeklyScheduleResponse>;

/**
 * @generated from message reservation.GenerateTimeSlotsRequest
 */
export declare type GenerateTimeSlotsRequest = Message<"reservation.GenerateTimeSlotsRequest"> & {
  /**
   * @generated from field: string weekly_schedule_id = 1;
   */
  weeklyScheduleId: string;
};

/**
 * Describes the message reservation.GenerateTimeSlotsRequest.
 * Use `create(GenerateTimeSlotsRequestSchema)` to create a new message.
 */
export declare const GenerateTimeSlotsRequestSchema: GenMessage<GenerateTimeSlotsRequest>;

/**
 * @generated from message reservation.GenerateTimeSlotsResponse
 */
export declare type GenerateTimeSlotsResponse = Message<"reservation.GenerateTimeSlotsResponse"> & {
  /**
   * @generated from field: repeated reservation.TimeSlot time_slots = 1;
   */
  timeSlots: TimeSlot[];
};

/**
 * Describes the message reservation.GenerateTimeSlotsResponse.
 * Use `create(GenerateTimeSlotsResponseSchema)` to create a new message.
 */
export declare const GenerateTimeSlotsResponseSchema: GenMessage<GenerateTimeSlotsResponse>;

/**
 * @generated from message reservation.CreateReservationRequest
 */
export declare type CreateReservationRequest = Message<"reservation.CreateReservationRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string provider_user_id = 2;
   */
  providerUserId: string;

  /**
   * @generated from field: string service_id = 3;
   */
  serviceId: string;

  /**
   * @generated from field: string time_slot_id = 4;
   */
  timeSlotId: string;

  /**
   * @generated from field: string notes = 5;
   */
  notes: string;
};

/**
 * Describes the message reservation.CreateReservationRequest.
 * Use `create(CreateReservationRequestSchema)` to create a new message.
 */
export declare const CreateReservationRequestSchema: GenMessage<CreateReservationRequest>;

/**
 * @generated from message reservation.CreateReservationResponse
 */
export declare type CreateReservationResponse = Message<"reservation.CreateReservationResponse"> & {
  /**
   * @generated from field: string reservation_id = 1;
   */
  reservationId: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message reservation.CreateReservationResponse.
 * Use `create(CreateReservationResponseSchema)` to create a new message.
 */
export declare const CreateReservationResponseSchema: GenMessage<CreateReservationResponse>;

/**
 * @generated from message reservation.CancelReservationRequest
 */
export declare type CancelReservationRequest = Message<"reservation.CancelReservationRequest"> & {
  /**
   * @generated from field: string reservation_id = 1;
   */
  reservationId: string;
};

/**
 * Describes the message reservation.CancelReservationRequest.
 * Use `create(CancelReservationRequestSchema)` to create a new message.
 */
export declare const CancelReservationRequestSchema: GenMessage<CancelReservationRequest>;

/**
 * @generated from message reservation.CancelReservationResponse
 */
export declare type CancelReservationResponse = Message<"reservation.CancelReservationResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message reservation.CancelReservationResponse.
 * Use `create(CancelReservationResponseSchema)` to create a new message.
 */
export declare const CancelReservationResponseSchema: GenMessage<CancelReservationResponse>;

/**
 * @generated from message reservation.ListReservationsRequest
 */
export declare type ListReservationsRequest = Message<"reservation.ListReservationsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: optional string status = 2;
   */
  status?: string;
};

/**
 * Describes the message reservation.ListReservationsRequest.
 * Use `create(ListReservationsRequestSchema)` to create a new message.
 */
export declare const ListReservationsRequestSchema: GenMessage<ListReservationsRequest>;

/**
 * @generated from message reservation.ListReservationsResponse
 */
export declare type ListReservationsResponse = Message<"reservation.ListReservationsResponse"> & {
  /**
   * @generated from field: repeated reservation.Reservation reservations = 1;
   */
  reservations: Reservation[];
};

/**
 * Describes the message reservation.ListReservationsResponse.
 * Use `create(ListReservationsResponseSchema)` to create a new message.
 */
export declare const ListReservationsResponseSchema: GenMessage<ListReservationsResponse>;

/**
 * @generated from message reservation.ListAvailableTimeSlotsRequest
 */
export declare type ListAvailableTimeSlotsRequest = Message<"reservation.ListAvailableTimeSlotsRequest"> & {
  /**
   * @generated from field: string provider_user_id = 1;
   */
  providerUserId: string;

  /**
   * @generated from field: string service_id = 2;
   */
  serviceId: string;

  /**
   * @generated from field: string facility_id = 3;
   */
  facilityId: string;
};

/**
 * Describes the message reservation.ListAvailableTimeSlotsRequest.
 * Use `create(ListAvailableTimeSlotsRequestSchema)` to create a new message.
 */
export declare const ListAvailableTimeSlotsRequestSchema: GenMessage<ListAvailableTimeSlotsRequest>;

/**
 * @generated from message reservation.ListAvailableTimeSlotsResponse
 */
export declare type ListAvailableTimeSlotsResponse = Message<"reservation.ListAvailableTimeSlotsResponse"> & {
  /**
   * @generated from field: repeated reservation.TimeSlot time_slots = 1;
   */
  timeSlots: TimeSlot[];
};

/**
 * Describes the message reservation.ListAvailableTimeSlotsResponse.
 * Use `create(ListAvailableTimeSlotsResponseSchema)` to create a new message.
 */
export declare const ListAvailableTimeSlotsResponseSchema: GenMessage<ListAvailableTimeSlotsResponse>;

/**
 * نوع مالک تایم‌اسلات — تعیین می‌کند که تایم‌اسلات متعلق به فرد است یا فضای مشترک
 * TimeSlot owner type — defines whether it's owned by an individual (e.g., doctor) or shared (e.g., room)
 *
 * @generated from enum reservation.OwnerType
 */
export enum OwnerType {
  /**
   * شخصی (مانند پزشک یا آرایشگر)
   *
   * @generated from enum value: INDIVIDUAL = 0;
   */
  INDIVIDUAL = 0,

  /**
   * اشتراکی (مانند میز یا سالن)
   *
   * @generated from enum value: SHARED = 1;
   */
  SHARED = 1,
}

/**
 * Describes the enum reservation.OwnerType.
 */
export declare const OwnerTypeSchema: GenEnum<OwnerType>;

/**
 * وضعیت رزرو
 * Reservation status
 *
 * @generated from enum reservation.ReservationStatus
 */
export enum ReservationStatus {
  /**
   * در انتظار تأیید
   *
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * تأیید شده
   *
   * @generated from enum value: CONFIRMED = 1;
   */
  CONFIRMED = 1,

  /**
   * لغو شده
   *
   * @generated from enum value: CANCELLED = 2;
   */
  CANCELLED = 2,

  /**
   * انجام شده
   *
   * @generated from enum value: COMPLETED = 3;
   */
  COMPLETED = 3,
}

/**
 * Describes the enum reservation.ReservationStatus.
 */
export declare const ReservationStatusSchema: GenEnum<ReservationStatus>;

/**
 * روزهای هفته
 * Days of the week
 *
 * @generated from enum reservation.WeekDay
 */
export enum WeekDay {
  /**
   * @generated from enum value: SATURDAY = 0;
   */
  SATURDAY = 0,

  /**
   * @generated from enum value: SUNDAY = 1;
   */
  SUNDAY = 1,

  /**
   * @generated from enum value: MONDAY = 2;
   */
  MONDAY = 2,

  /**
   * @generated from enum value: TUESDAY = 3;
   */
  TUESDAY = 3,

  /**
   * @generated from enum value: WEDNESDAY = 4;
   */
  WEDNESDAY = 4,

  /**
   * @generated from enum value: THURSDAY = 5;
   */
  THURSDAY = 5,

  /**
   * @generated from enum value: FRIDAY = 6;
   */
  FRIDAY = 6,
}

/**
 * Describes the enum reservation.WeekDay.
 */
export declare const WeekDaySchema: GenEnum<WeekDay>;

/**
 * @generated from service reservation.ReservationService
 */
export declare const ReservationService: GenService<{
  /**
   * @generated from rpc reservation.ReservationService.CreateFacility
   */
  createFacility: {
    methodKind: "unary";
    input: typeof CreateFacilityRequestSchema;
    output: typeof CreateFacilityResponseSchema;
  },
  /**
   * @generated from rpc reservation.ReservationService.CreateService
   */
  createService: {
    methodKind: "unary";
    input: typeof CreateServiceRequestSchema;
    output: typeof CreateServiceResponseSchema;
  },
  /**
   * @generated from rpc reservation.ReservationService.AssignServiceToProvider
   */
  assignServiceToProvider: {
    methodKind: "unary";
    input: typeof AssignServiceToProviderRequestSchema;
    output: typeof AssignServiceToProviderResponseSchema;
  },
  /**
   * @generated from rpc reservation.ReservationService.CreateWeeklySchedule
   */
  createWeeklySchedule: {
    methodKind: "unary";
    input: typeof CreateWeeklyScheduleRequestSchema;
    output: typeof CreateWeeklyScheduleResponseSchema;
  },
  /**
   * @generated from rpc reservation.ReservationService.GenerateTimeSlots
   */
  generateTimeSlots: {
    methodKind: "unary";
    input: typeof GenerateTimeSlotsRequestSchema;
    output: typeof GenerateTimeSlotsResponseSchema;
  },
  /**
   * @generated from rpc reservation.ReservationService.CreateReservation
   */
  createReservation: {
    methodKind: "unary";
    input: typeof CreateReservationRequestSchema;
    output: typeof CreateReservationResponseSchema;
  },
  /**
   * @generated from rpc reservation.ReservationService.CancelReservation
   */
  cancelReservation: {
    methodKind: "unary";
    input: typeof CancelReservationRequestSchema;
    output: typeof CancelReservationResponseSchema;
  },
  /**
   * @generated from rpc reservation.ReservationService.ListReservations
   */
  listReservations: {
    methodKind: "unary";
    input: typeof ListReservationsRequestSchema;
    output: typeof ListReservationsResponseSchema;
  },
  /**
   * @generated from rpc reservation.ReservationService.ListAvailableTimeSlots
   */
  listAvailableTimeSlots: {
    methodKind: "unary";
    input: typeof ListAvailableTimeSlotsRequestSchema;
    output: typeof ListAvailableTimeSlotsResponseSchema;
  },
}>;

