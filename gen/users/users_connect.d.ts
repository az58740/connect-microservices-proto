// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts+js+dts"
// @generated from file users/users.proto (package users, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateContractRequest, CreateContractResponse, CreateOrganizationGroupRequest, CreateOrganizationGroupResponse, CreateOrganizationRequest, CreateOrganizationResponse, DeleteContractRequest, DeleteContractResponse, DeleteOrganizationGroupRequest, DeleteOrganizationGroupResponse, DeleteOrganizationRequest, DeleteOrganizationResponse, ForgotPasswordRequest, ForgotPasswordResponse, GetGeolocationRequest, GetGeolocationResponse, ListContractRequest, ListContractResponse, ListOrganizationGroupRequest, ListOrganizationGroupResponse, ListOrganizationRequest, ListOrganizationResponse, ListUsersRequest, ListUsersResponse, LoginRequest, LoginResponse, RegisterRequest, RegisterResponse, UpdateContractRequest, UpdateContractResponse, UpdateOrganizationGroupRequest, UpdateOrganizationGroupResponse, UpdateOrganizationRequest, UpdateOrganizationResponse, UpdateUserRequest, UpdateUserResponse } from "./users_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ==================== SERVICE DEFINITIONS ====================
 *
 * @generated from service users.UsersService
 */
export declare const UsersService: {
  readonly typeName: "users.UsersService",
  readonly methods: {
    /**
     * User-related methods
     *
     * Register a new user.
     *
     * @generated from rpc users.UsersService.RegisterUser
     */
    readonly registerUser: {
      readonly name: "RegisterUser",
      readonly I: typeof RegisterRequest,
      readonly O: typeof RegisterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Log a user in.
     *
     * @generated from rpc users.UsersService.LoginUser
     */
    readonly loginUser: {
      readonly name: "LoginUser",
      readonly I: typeof LoginRequest,
      readonly O: typeof LoginResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * List users with pagination and filtering.
     *
     * @generated from rpc users.UsersService.ListUsers
     */
    readonly listUsers: {
      readonly name: "ListUsers",
      readonly I: typeof ListUsersRequest,
      readonly O: typeof ListUsersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update user details.
     *
     * @generated from rpc users.UsersService.UpdateUser
     */
    readonly updateUser: {
      readonly name: "UpdateUser",
      readonly I: typeof UpdateUserRequest,
      readonly O: typeof UpdateUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Forgot Password 
     *
     * @generated from rpc users.UsersService.ForgotPassword
     */
    readonly forgotPassword: {
      readonly name: "ForgotPassword",
      readonly I: typeof ForgotPasswordRequest,
      readonly O: typeof ForgotPasswordResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Organization Group related methods
     *
     * @generated from rpc users.UsersService.CreateOrganizationGroup
     */
    readonly createOrganizationGroup: {
      readonly name: "CreateOrganizationGroup",
      readonly I: typeof CreateOrganizationGroupRequest,
      readonly O: typeof CreateOrganizationGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.UpdateOrganizationGroup
     */
    readonly updateOrganizationGroup: {
      readonly name: "UpdateOrganizationGroup",
      readonly I: typeof UpdateOrganizationGroupRequest,
      readonly O: typeof UpdateOrganizationGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.DeleteOrganizationGroup
     */
    readonly deleteOrganizationGroup: {
      readonly name: "DeleteOrganizationGroup",
      readonly I: typeof DeleteOrganizationGroupRequest,
      readonly O: typeof DeleteOrganizationGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.ListOrganizationGroup
     */
    readonly listOrganizationGroup: {
      readonly name: "ListOrganizationGroup",
      readonly I: typeof ListOrganizationGroupRequest,
      readonly O: typeof ListOrganizationGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Organization related methods
     *
     * @generated from rpc users.UsersService.CreateOrganization
     */
    readonly createOrganization: {
      readonly name: "CreateOrganization",
      readonly I: typeof CreateOrganizationRequest,
      readonly O: typeof CreateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.UpdateOrganization
     */
    readonly updateOrganization: {
      readonly name: "UpdateOrganization",
      readonly I: typeof UpdateOrganizationRequest,
      readonly O: typeof UpdateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.DeleteOrganization
     */
    readonly deleteOrganization: {
      readonly name: "DeleteOrganization",
      readonly I: typeof DeleteOrganizationRequest,
      readonly O: typeof DeleteOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.ListOrganization
     */
    readonly listOrganization: {
      readonly name: "ListOrganization",
      readonly I: typeof ListOrganizationRequest,
      readonly O: typeof ListOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Contract related methods
     *
     * @generated from rpc users.UsersService.CreateContract
     */
    readonly createContract: {
      readonly name: "CreateContract",
      readonly I: typeof CreateContractRequest,
      readonly O: typeof CreateContractResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.UpdateContract
     */
    readonly updateContract: {
      readonly name: "UpdateContract",
      readonly I: typeof UpdateContractRequest,
      readonly O: typeof UpdateContractResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.DeleteContract
     */
    readonly deleteContract: {
      readonly name: "DeleteContract",
      readonly I: typeof DeleteContractRequest,
      readonly O: typeof DeleteContractResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.ListContract
     */
    readonly listContract: {
      readonly name: "ListContract",
      readonly I: typeof ListContractRequest,
      readonly O: typeof ListContractResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Geolocation related methods
     *
     * @generated from rpc users.UsersService.GetCountries
     */
    readonly getCountries: {
      readonly name: "GetCountries",
      readonly I: typeof GetGeolocationRequest,
      readonly O: typeof GetGeolocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.GetProvinces
     */
    readonly getProvinces: {
      readonly name: "GetProvinces",
      readonly I: typeof GetGeolocationRequest,
      readonly O: typeof GetGeolocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.GetCities
     */
    readonly getCities: {
      readonly name: "GetCities",
      readonly I: typeof GetGeolocationRequest,
      readonly O: typeof GetGeolocationResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

