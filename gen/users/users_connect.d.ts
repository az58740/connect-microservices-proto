// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts+js+dts"
// @generated from file users/users.proto (package users, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddFavoriteRequest, AddFavoriteResponse, AssignPermissionsToRoleRequest, AssignRolesToUserRequest, CheckPermissionRequest, CheckPermissionResponse, CreateContractRequest, CreateContractResponse, CreateOrganizationGroupRequest, CreateOrganizationGroupResponse, CreateOrganizationRequest, CreateOrganizationResponse, CreatePermissionRequest, CreateRoleRequest, DeleteContractRequest, DeleteContractResponse, DeleteOrganizationGroupRequest, DeleteOrganizationGroupResponse, DeleteOrganizationRequest, DeleteOrganizationResponse, DeleteResetTokenRequest, DeleteResetTokenResponse, ForgotPasswordRequest, ForgotPasswordResponse, GetGeolocationRequest, GetGeolocationResponse, GetResetTokenRequest, GetResetTokenResponse, GetUserRolesRequest, GetUserRolesResponse, ListContractRequest, ListContractResponse, ListFavoritesRequest, ListFavoritesResponse, ListOrganizationGroupRequest, ListOrganizationGroupResponse, ListOrganizationRequest, ListOrganizationResponse, ListPermissionsRequest, ListPermissionsResponse, ListRolesRequest, ListRolesResponse, ListUsersRequest, ListUsersResponse, LoginRequest, LoginResponse, PermissionResponse, RegisterRequest, RegisterResponse, RemoveFavoriteRequest, RemoveFavoriteResponse, RemovePermissionRequest, RemoveUserRoleRequest, RoleResponse, UpdateContractRequest, UpdateContractResponse, UpdateOrganizationGroupRequest, UpdateOrganizationGroupResponse, UpdateOrganizationRequest, UpdateOrganizationResponse, UpdateRoleRequest, UpdateRoleResponse, UpdateUserRequest, UpdateUserResponse, User } from "./users_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ==================== SERVICE DEFINITIONS ====================
 *
 * @generated from service users.UsersService
 */
export declare const UsersService: {
  readonly typeName: "users.UsersService",
  readonly methods: {
    /**
     * User-related methods
     *
     * Register a new user.
     *
     * @generated from rpc users.UsersService.RegisterUser
     */
    readonly registerUser: {
      readonly name: "RegisterUser",
      readonly I: typeof RegisterRequest,
      readonly O: typeof RegisterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Log a user in.
     *
     * @generated from rpc users.UsersService.LoginUser
     */
    readonly loginUser: {
      readonly name: "LoginUser",
      readonly I: typeof LoginRequest,
      readonly O: typeof LoginResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * List users with pagination and filtering.
     *
     * @generated from rpc users.UsersService.ListUsers
     */
    readonly listUsers: {
      readonly name: "ListUsers",
      readonly I: typeof ListUsersRequest,
      readonly O: typeof ListUsersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update user details.
     *
     * @generated from rpc users.UsersService.UpdateUser
     */
    readonly updateUser: {
      readonly name: "UpdateUser",
      readonly I: typeof UpdateUserRequest,
      readonly O: typeof UpdateUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Forgot Password 
     *
     * @generated from rpc users.UsersService.ForgotPassword
     */
    readonly forgotPassword: {
      readonly name: "ForgotPassword",
      readonly I: typeof ForgotPasswordRequest,
      readonly O: typeof ForgotPasswordResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Organization Group related methods
     *
     * @generated from rpc users.UsersService.CreateOrganizationGroup
     */
    readonly createOrganizationGroup: {
      readonly name: "CreateOrganizationGroup",
      readonly I: typeof CreateOrganizationGroupRequest,
      readonly O: typeof CreateOrganizationGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.UpdateOrganizationGroup
     */
    readonly updateOrganizationGroup: {
      readonly name: "UpdateOrganizationGroup",
      readonly I: typeof UpdateOrganizationGroupRequest,
      readonly O: typeof UpdateOrganizationGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.DeleteOrganizationGroup
     */
    readonly deleteOrganizationGroup: {
      readonly name: "DeleteOrganizationGroup",
      readonly I: typeof DeleteOrganizationGroupRequest,
      readonly O: typeof DeleteOrganizationGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.ListOrganizationGroup
     */
    readonly listOrganizationGroup: {
      readonly name: "ListOrganizationGroup",
      readonly I: typeof ListOrganizationGroupRequest,
      readonly O: typeof ListOrganizationGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Organization related methods
     *
     * @generated from rpc users.UsersService.CreateOrganization
     */
    readonly createOrganization: {
      readonly name: "CreateOrganization",
      readonly I: typeof CreateOrganizationRequest,
      readonly O: typeof CreateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.UpdateOrganization
     */
    readonly updateOrganization: {
      readonly name: "UpdateOrganization",
      readonly I: typeof UpdateOrganizationRequest,
      readonly O: typeof UpdateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.DeleteOrganization
     */
    readonly deleteOrganization: {
      readonly name: "DeleteOrganization",
      readonly I: typeof DeleteOrganizationRequest,
      readonly O: typeof DeleteOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.ListOrganization
     */
    readonly listOrganization: {
      readonly name: "ListOrganization",
      readonly I: typeof ListOrganizationRequest,
      readonly O: typeof ListOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Contract related methods
     *
     * @generated from rpc users.UsersService.CreateContract
     */
    readonly createContract: {
      readonly name: "CreateContract",
      readonly I: typeof CreateContractRequest,
      readonly O: typeof CreateContractResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.UpdateContract
     */
    readonly updateContract: {
      readonly name: "UpdateContract",
      readonly I: typeof UpdateContractRequest,
      readonly O: typeof UpdateContractResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.DeleteContract
     */
    readonly deleteContract: {
      readonly name: "DeleteContract",
      readonly I: typeof DeleteContractRequest,
      readonly O: typeof DeleteContractResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.ListContract
     */
    readonly listContract: {
      readonly name: "ListContract",
      readonly I: typeof ListContractRequest,
      readonly O: typeof ListContractResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Geolocation related methods
     *
     * @generated from rpc users.UsersService.GetCountries
     */
    readonly getCountries: {
      readonly name: "GetCountries",
      readonly I: typeof GetGeolocationRequest,
      readonly O: typeof GetGeolocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.GetProvinces
     */
    readonly getProvinces: {
      readonly name: "GetProvinces",
      readonly I: typeof GetGeolocationRequest,
      readonly O: typeof GetGeolocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.GetCities
     */
    readonly getCities: {
      readonly name: "GetCities",
      readonly I: typeof GetGeolocationRequest,
      readonly O: typeof GetGeolocationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Generate token related methods
     *
     * @generated from rpc users.UsersService.GetResetTokenByShortCode
     */
    readonly getResetTokenByShortCode: {
      readonly name: "GetResetTokenByShortCode",
      readonly I: typeof GetResetTokenRequest,
      readonly O: typeof GetResetTokenResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.DeleteResetToken
     */
    readonly deleteResetToken: {
      readonly name: "DeleteResetToken",
      readonly I: typeof DeleteResetTokenRequest,
      readonly O: typeof DeleteResetTokenResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Role and Permission related methodes
     *
     * @generated from rpc users.UsersService.CreatePermission
     */
    readonly createPermission: {
      readonly name: "CreatePermission",
      readonly I: typeof CreatePermissionRequest,
      readonly O: typeof PermissionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.ListPermissions
     */
    readonly listPermissions: {
      readonly name: "ListPermissions",
      readonly I: typeof ListPermissionsRequest,
      readonly O: typeof ListPermissionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.CreateRole
     */
    readonly createRole: {
      readonly name: "CreateRole",
      readonly I: typeof CreateRoleRequest,
      readonly O: typeof RoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.UpdateRole
     */
    readonly updateRole: {
      readonly name: "UpdateRole",
      readonly I: typeof UpdateRoleRequest,
      readonly O: typeof UpdateRoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.ListRoles
     */
    readonly listRoles: {
      readonly name: "ListRoles",
      readonly I: typeof ListRolesRequest,
      readonly O: typeof ListRolesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.AssignPermissionsToRole
     */
    readonly assignPermissionsToRole: {
      readonly name: "AssignPermissionsToRole",
      readonly I: typeof AssignPermissionsToRoleRequest,
      readonly O: typeof RoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.RemovePermissionFromRole
     */
    readonly removePermissionFromRole: {
      readonly name: "RemovePermissionFromRole",
      readonly I: typeof RemovePermissionRequest,
      readonly O: typeof RoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.AssignRolesToUser
     */
    readonly assignRolesToUser: {
      readonly name: "AssignRolesToUser",
      readonly I: typeof AssignRolesToUserRequest,
      readonly O: typeof User,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.RemoveUserRole
     */
    readonly removeUserRole: {
      readonly name: "RemoveUserRole",
      readonly I: typeof RemoveUserRoleRequest,
      readonly O: typeof User,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc users.UsersService.GetUserRoles
     */
    readonly getUserRoles: {
      readonly name: "GetUserRoles",
      readonly I: typeof GetUserRolesRequest,
      readonly O: typeof GetUserRolesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * سرویس Favorites
     * Favorites service
     *
     * @generated from rpc users.UsersService.CheckPermission
     */
    readonly checkPermission: {
      readonly name: "CheckPermission",
      readonly I: typeof CheckPermissionRequest,
      readonly O: typeof CheckPermissionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * اضافه کردن علاقه‌مندی / Add a favorite
     *
     * @generated from rpc users.UsersService.AddFavorite
     */
    readonly addFavorite: {
      readonly name: "AddFavorite",
      readonly I: typeof AddFavoriteRequest,
      readonly O: typeof AddFavoriteResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * حذف علاقه‌مندی / Remove a favorite
     *
     * @generated from rpc users.UsersService.RemoveFavorite
     */
    readonly removeFavorite: {
      readonly name: "RemoveFavorite",
      readonly I: typeof RemoveFavoriteRequest,
      readonly O: typeof RemoveFavoriteResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * دریافت لیست علاقه‌مندی‌ها / List favorites
     *
     * @generated from rpc users.UsersService.ListFavorites
     */
    readonly listFavorites: {
      readonly name: "ListFavorites",
      readonly I: typeof ListFavoritesRequest,
      readonly O: typeof ListFavoritesResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

