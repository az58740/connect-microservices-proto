// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts+js+dts"
// @generated from file users/users.proto (package users, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetUserRequest, GetUserResponse, ListUsersRequest, ListUsersResponse, LoginRequest, LoginResponse, LogoutRequest, LogoutResponse, RegisterRequest, RegisterResponse, UpdateUserRequest, UpdateUserResponse } from "./users_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Service for managing users (authentication, user details, and user roles).
 *
 * @generated from service users.UsersService
 */
export const UsersService = {
  typeName: "users.UsersService",
  methods: {
    /**
     * Auth-related methods
     *
     * Register a new user.
     *
     * @generated from rpc users.UsersService.RegisterUser
     */
    registerUser: {
      name: "RegisterUser",
      I: RegisterRequest,
      O: RegisterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Log a user in.
     *
     * @generated from rpc users.UsersService.LoginUser
     */
    loginUser: {
      name: "LoginUser",
      I: LoginRequest,
      O: LoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Log a user out.
     *
     * @generated from rpc users.UsersService.LogoutUser
     */
    logoutUser: {
      name: "LogoutUser",
      I: LogoutRequest,
      O: LogoutResponse,
      kind: MethodKind.Unary,
    },
    /**
     * User management methods
     *
     * Retrieve user details by ID.
     *
     * @generated from rpc users.UsersService.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: GetUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update a user's details.
     *
     * @generated from rpc users.UsersService.UpdateUser
     */
    updateUser: {
      name: "UpdateUser",
      I: UpdateUserRequest,
      O: UpdateUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List users with pagination and filtering.
     *
     * @generated from rpc users.UsersService.ListUsers
     */
    listUsers: {
      name: "ListUsers",
      I: ListUsersRequest,
      O: ListUsersResponse,
      kind: MethodKind.Unary,
    },
  }
};

